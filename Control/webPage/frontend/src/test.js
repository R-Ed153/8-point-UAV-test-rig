var force =  {
  time: [
          0,  74.527,  79.416,  83.389,  87.158,  90.724,
     94.798, 100.503, 103.966, 108.244, 113.134, 116.903,
     120.57,  124.44, 128.311, 132.182, 136.155, 139.924,
    143.693, 148.175, 152.147, 156.629, 165.185, 169.056,
    173.436, 177.409, 181.687, 187.188, 190.957,  194.93,
    199.106, 203.486, 209.292, 213.774, 222.228, 226.608,
    231.803, 235.775, 239.747, 244.331, 249.016, 254.109,
    258.794, 263.682, 267.655, 271.932, 276.312, 282.118,
    286.599, 290.979, 295.358, 299.636, 303.914, 308.904,
     313.59, 319.395, 325.201, 329.478, 334.673, 339.256,
    344.246, 349.441, 354.329, 359.218, 363.903, 369.301,
    374.292, 379.791
  ],
  gauge1: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0
  ],
  gauge2: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0
  ],
  gauge3: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0
  ],
  gauge4: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,      
    0, 0, 0, 0, 0, 0, 0, 0
  ],
  gauge5: [
        0, -4.69, -4.76, -4.82, -4.81, -4.83, -4.84,
    -4.93, -4.86, -4.85, -4.78, -4.74, -4.79, -4.82,
    -4.84, -4.86, -4.84,  -4.8, -4.78, -4.75, -4.84,
    -4.84, -4.89, -4.78, -4.83, -4.86, -4.92, -4.87,
    -4.91, -4.87, -4.84, -4.77, -4.73, -4.72, -4.62,
    -4.65, -4.61, -4.57, -4.56, -4.53, -4.51, -4.48,
    -4.48, -4.48, -4.49, -4.48, -4.49, -4.55, -4.56,
    -4.55, -4.48, -4.48, -4.47, -4.47, -4.44, -4.43,
    -4.44, -4.46, -4.48, -4.45, -4.42, -4.42, -4.39,
    -4.38, -4.41, -4.43, -4.39, -4.48        
  ],
  gauge6: [
        0, -0.01, -0.01, -0.01, -0.01, -0.01, -0.01,
    -0.01, -0.01, -0.01, -0.01, -0.01, -0.01, -0.01,
    -0.01, -0.01, -0.01, -0.01, -0.01, -0.01, -0.01,
    -0.01, -0.01, -0.01, 55.92, -0.01, -0.01, -0.01,
    -0.01, -0.01, -0.01, -0.01, -0.01, -0.01, -0.01,
    -0.01, -0.01, -0.01, -0.01, -0.01, -0.01, -0.01,
    -0.01, -0.01, -0.01, -0.01, -0.01, -0.01, -0.01,
    -0.01, -0.01, -0.01, -0.01, -0.01, -0.01, -0.01,
    -0.01, -0.01, -0.01, -0.01, -0.01, -0.01, -0.01,
    -0.01, -0.01, -0.01, -0.01, -0.01        
  ],
  gauge7: [
        0, -3.27,  -3.3, -3.18, -3.11, -3.11, -3.09,
    -3.23, -3.26,  -3.3, -3.23, -3.27, -3.27, -3.25,
     -3.2, -3.13, -3.15, -3.19, -3.25, -3.39, -3.31,
    -3.16, -3.14, -3.29, -3.29, -3.25,  -3.2, -3.16,
    -3.11, -3.13, -3.14,  -3.2, -3.22, -3.24, -3.23,
    -3.16, -3.14, -3.14, -3.23, -3.22, -3.24, -3.18,
    -3.13,  -3.1, -3.09, -3.09, -3.11, -3.17, -3.19,
    -3.22, -3.19, -3.19, -3.23, -3.23, -3.21,  -3.2,
     -3.2, -3.24, -3.22, -3.26, -3.29, -3.24, -3.32,
    -3.27, -3.27, -3.33, -3.33, -3.06        
  ],
  gauge8: [
         0,  -33.4, -33.38, -33.43,  -33.5, -33.55,
    -33.57, -33.47, -33.41, -33.43, -33.35,  
-33.3,
    -33.23, -33.32, -33.41, -33.47, -33.52, -33.56,
    -33.61, -33.58, -33.59, -33.65, -33.71, -33.69,
     -33.7, -33.69, -33.72, -33.76, -33.78, -33.65,
    -33.74, -33.79, -33.83, -33.78, -33.47, -33.35,
    -33.18, -33.19, -33.12, -33.05, -33.03, -32.95,
    -32.92, -32.93, -33.01, -33.03, -33.03, -33.03,
    -33.08, -33.11, -33.06, -32.98, -32.95, -32.88,
    -32.86, -32.85, -32.78, -32.84, -32.87, -32.82,
    -32.79, -32.86, -32.84, -32.88, -32.87,  
-32.8,
    -32.95, -33.06
  ]
}

function componentToRechartFormat(schema) {
  var titleArray = [];
  titleArray = Object.keys(schema);

  //push all data to one array
  var dataArray = [];
  for (var i = 0; i < titleArray.length; i++) {
    dataArray.push(schema[`${titleArray[i]}`]);
  }
  //re-arrange data from format provided from micro-controller
  var dataTranspose = matrixTranspose(dataArray);

  var objectArray = [];
  for (var j = 0; j < dataTranspose.length; j++) {
    var componentArray = dataTranspose[j];
    var componentObject = {};
    for (var k = 0; k < componentArray.length; k++) {
      componentObject[titleArray[k]] = componentArray[k];
    }
    objectArray.push(componentObject);
  }

  return objectArray;
}

const matrixTranspose = (matrix) => {
  return matrix[0].map((col, c) => {
    return matrix.map((row, r) => {
      return matrix[r][c];
    });
  });
};




export function forceSummation(forceData){
  let summation = 0;
  let forceValues = Object.values(forceData);
  summation = forceValues.reduce((partialSum,a)=>partialSum + a,0)
  return summation
}


var force2 = componentToRechartFormat(force);

var force3 = [];

console.log(force2);
for(var i = 0;i < force2.length; i++){

  force3.push(forceSummation(force2[i]))
}
console.log(force3)